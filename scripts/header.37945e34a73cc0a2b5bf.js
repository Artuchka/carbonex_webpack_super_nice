"use strict";(self.webpackChunkcarbonex_webpack_3=self.webpackChunkcarbonex_webpack_3||[]).push([[19],{91:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),t.hash&&(e+=t.hash),t.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},648:(e,t,a)=>{a.d(t,{n:()=>u});var c=a(511),r=a(134),n=a(91),o=a.n(n),s=new URL(a(511),a.b),d=new URL(a(134),a.b);function u(e){e.addEventListener("click",g)}o()(s),o()(d),document.querySelector("[data-header-logo-image]").src=c,document.querySelector("[data-header-hamburger-image]").src=r;const l=document.querySelector("[data-header-hamburger]"),i=document.querySelector("[data-nav]"),h=i.querySelector(".nav-list"),m=document.querySelector("[data-leave-call]"),p=document.querySelector("[data-modal]"),b=document.querySelector("[data-modal-bg]");function g(){p.classList.add("open"),b.classList.add("open")}Array.from(h.children).forEach((e=>{const t=e.querySelector("a");t.href="https://artuchka.github.io/carbonex_webpack_super_nice/pages/"+t.getAttribute("href")})),l.addEventListener("click",(function(){i.classList.toggle("show")})),m.addEventListener("click",g),b.addEventListener("click",(function(){p.classList.remove("open"),b.classList.remove("open")}))},134:(e,t,a)=>{e.exports=a.p+"images/hamburger.ce7fd22278cd3580face.svg"},511:(e,t,a)=>{e.exports=a.p+"images/logo.975bf05a8199e7aa50f2.png"}},e=>{e(e.s=648)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,